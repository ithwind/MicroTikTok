// Code generated by goctl. DO NOT EDIT.
// Source: chat.proto

package chatclient

import (
	"context"

	"MicroTikTok/chat/rpc/pb/chat"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChatActionRequest   = chat.ChatActionRequest
	ChatActionResponse  = chat.ChatActionResponse
	ChatMessageRequest  = chat.ChatMessageRequest
	ChatMessageResponse = chat.ChatMessageResponse
	Message             = chat.Message

	Chat interface {
		ChatAction(ctx context.Context, in *ChatActionRequest, opts ...grpc.CallOption) (*ChatActionResponse, error)
		ChatMessage(ctx context.Context, in *ChatMessageRequest, opts ...grpc.CallOption) (*ChatMessageResponse, error)
	}

	defaultChat struct {
		cli zrpc.Client
	}
)

func NewChat(cli zrpc.Client) Chat {
	return &defaultChat{
		cli: cli,
	}
}

func (m *defaultChat) ChatAction(ctx context.Context, in *ChatActionRequest, opts ...grpc.CallOption) (*ChatActionResponse, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.ChatAction(ctx, in, opts...)
}

func (m *defaultChat) ChatMessage(ctx context.Context, in *ChatMessageRequest, opts ...grpc.CallOption) (*ChatMessageResponse, error) {
	client := chat.NewChatClient(m.cli.Conn())
	return client.ChatMessage(ctx, in, opts...)
}
