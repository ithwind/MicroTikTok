// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.0
// source: favoritelist.proto

package favoritelist

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	FavoriteList_FavoriteList_FullMethodName = "/favoritelist.favoriteList/favoriteList"
)

// FavoriteListClient is the client API for FavoriteList service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FavoriteListClient interface {
	FavoriteList(ctx context.Context, in *FavoriteListRequest, opts ...grpc.CallOption) (*FavoriteListResponse, error)
}

type favoriteListClient struct {
	cc grpc.ClientConnInterface
}

func NewFavoriteListClient(cc grpc.ClientConnInterface) FavoriteListClient {
	return &favoriteListClient{cc}
}

func (c *favoriteListClient) FavoriteList(ctx context.Context, in *FavoriteListRequest, opts ...grpc.CallOption) (*FavoriteListResponse, error) {
	out := new(FavoriteListResponse)
	err := c.cc.Invoke(ctx, FavoriteList_FavoriteList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FavoriteListServer is the server API for FavoriteList service.
// All implementations must embed UnimplementedFavoriteListServer
// for forward compatibility
type FavoriteListServer interface {
	FavoriteList(context.Context, *FavoriteListRequest) (*FavoriteListResponse, error)
	mustEmbedUnimplementedFavoriteListServer()
}

// UnimplementedFavoriteListServer must be embedded to have forward compatible implementations.
type UnimplementedFavoriteListServer struct {
}

func (UnimplementedFavoriteListServer) FavoriteList(context.Context, *FavoriteListRequest) (*FavoriteListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FavoriteList not implemented")
}
func (UnimplementedFavoriteListServer) mustEmbedUnimplementedFavoriteListServer() {}

// UnsafeFavoriteListServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FavoriteListServer will
// result in compilation errors.
type UnsafeFavoriteListServer interface {
	mustEmbedUnimplementedFavoriteListServer()
}

func RegisterFavoriteListServer(s grpc.ServiceRegistrar, srv FavoriteListServer) {
	s.RegisterService(&FavoriteList_ServiceDesc, srv)
}

func _FavoriteList_FavoriteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FavoriteListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FavoriteListServer).FavoriteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: FavoriteList_FavoriteList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FavoriteListServer).FavoriteList(ctx, req.(*FavoriteListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// FavoriteList_ServiceDesc is the grpc.ServiceDesc for FavoriteList service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var FavoriteList_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "favoritelist.favoriteList",
	HandlerType: (*FavoriteListServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "favoriteList",
			Handler:    _FavoriteList_FavoriteList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "favoritelist.proto",
}
